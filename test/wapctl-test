# sh -x ./wapctl-test

which ./wapctl
./wapctl; echo Return-code: $?
./wapctl --help; echo Return-code: $?

./wapctl -P1 calc -y; echo Return-code: $?
./wapctl -p; echo Return-code: $?
./wapctl -pl wap-name-which-does-not-exist; echo Return-code: $?
./wapctl -pl calc; echo Return-code: $?
./wapctl -pi calc -s, -H; echo Return-code: $?
./wapctl -p0 calculator -y; echo Return-code: $?

./wapctl -a; echo Return-code: $?
./wapctl -al wap-name-which-does-not-exist; echo Return-code: $?
./wapctl -al 電卓; echo Return-code: $?
./wapctl -ai 電卓 -s, -H; echo Return-code: $?
./wapctl -a1 電卓 -y; echo Return-code: $?
./wapctl -pi calculator -s, -H; echo Return-code: $?
./wapctl -p0 calculator -y; echo Return-code: $?

./wapctl -I; echo Return-code: $?
./wapctl -Il wap-name-which-does-not-exist; echo Return-code: $?
./wapctl -Il zoom; echo Return-code: $?
./wapctl -Ii zoom -s, -H; echo Return-code: $?
./wapctl -Iz zoom; echo Return-code: $?

./wapctl -P; echo Return-code: $?
./wapctl -Pl wap-name-which-does-not-exist; echo Return-code: $?
./wapctl -Pl Microsoft.MicrosoftEdge; echo Return-code: $?
./wapctl -Pi Microsoft.MicrosoftEdge -e -s, -H; echo Return-code: $?
./wapctl -P1 Microsoft.MicrosoftEdge -e -y; echo Return-code: $?
./wapctl -pi msedge -s, -H; echo Return-code: $?
./wapctl -p0 msedge -y; echo Return-code: $?
./wapctl -Pz paint; echo Return-code: $?

./wapctl -S; echo Return-code: $?
./wapctl -Sl wap-name-which-does-not-exist; echo Return-code: $?
./wapctl -Sl docker; echo Return-code: $?
./wapctl -Si docker -s, -H; echo Return-code: $?
./wapctl -S0 docker -y; echo Return-code: $?
./wapctl -Si docker -s, -H; echo Return-code: $?
./wapctl -S1 docker -y; echo Return-code: $?
./wapctl -Si docker -s, -H; echo Return-code: $?

./wapctl -R; echo Return-code: $?
./wapctl -Rl wap-name-which-does-not-exist; echo Return-code: $?
./wapctl -Rl docker; echo Return-code: $?
./wapctl -Ri docker -s, -H; echo Return-code: $?
./wapctl -R0 docker -y; echo Return-code: $?
./wapctl -Ri docker -s, -H; echo Return-code: $?
./wapctl -R1 docker -y; echo Return-code: $?
./wapctl -Ri docker -s, -H; echo Return-code: $?

echo test for input\(\) to stderr
./wapctl -pi | grep netsvcs

echo test -W
./wapctl -pi powershell
./wapctl -piW powershell
